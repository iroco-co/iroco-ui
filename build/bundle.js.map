{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@roxi/routify/runtime.config.js","../../node_modules/@roxi/routify/runtime/utils/index.js","../../node_modules/@roxi/routify/runtime/decorators/Noop.svelte","../../node_modules/svelte/store/index.mjs","../../node_modules/@roxi/routify/runtime/store.js","../../node_modules/@roxi/routify/runtime/utils/urlToRoute.js","../../node_modules/@roxi/routify/runtime/Prefetcher.svelte","../../node_modules/@roxi/routify/runtime/helpers.js","../../node_modules/@roxi/routify/runtime/Route.svelte","../../node_modules/@roxi/routify/runtime/utils/onPageLoaded.js","../../node_modules/@roxi/routify/runtime/navigator.js","../../node_modules/@roxi/routify/runtime/Router.svelte","../../node_modules/@roxi/routify/runtime/middleware.js","../../node_modules/@roxi/routify/runtime/plugins/tree.js","../../node_modules/@roxi/routify/runtime/utils/normalizeNode.js","../../node_modules/@roxi/routify/runtime/plugins/assignAPI.js","../../node_modules/@roxi/routify/runtime/buildRoutes.js","../../.routify/routes.js","../../src/main.js","../../node_modules/@roxi/routify/hmr.js","../../src/pages/_fallback.svelte","../../src/pages/components/button.svx","../../src/pages/_navigation.svelte","../../src/pages/_layout.svelte"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export default {\n    queryHandler: {\n        parse: search => fromEntries(new URLSearchParams(search)),\n        stringify: params => '?' + (new URLSearchParams(params)).toString()\n    },\n    urlTransform: {\n        apply: x => x,\n        remove: x => x\n    },\n    useHash: false\n}\n\n\nfunction fromEntries(iterable) {\n    return [...iterable].reduce((obj, [key, val]) => {\n        obj[key] = val\n        return obj\n    }, {})\n}","import config from '../../runtime.config'\n\nconst MATCH_PARAM = RegExp(/\\:([^/()]+)/g)\n\nexport function handleScroll(element, scrollToTop) {\n  if (navigator.userAgent.includes('jsdom')) return false\n  if (scrollToTop) scrollAncestorsToTop(element)\n  handleHash()\n}\n\nexport function handleHash() {\n  if (navigator.userAgent.includes('jsdom')) return false\n  const { hash } = window.location\n  if (hash) {\n    const validElementIdRegex = /^[A-Za-z]+[\\w\\-\\:\\.]*$/\n    if (validElementIdRegex.test(hash.substring(1))) {\n      const el = document.querySelector(hash)\n      if (el) el.scrollIntoView()\n    }\n  }\n}\n\nexport function scrollAncestorsToTop(element) {\n  if (\n    element &&\n    element.scrollTo &&\n    element.dataset.routify !== 'scroll-lock' &&\n    element.dataset['routify-scroll'] !== 'lock'\n  ) {\n    element.style['scroll-behavior'] = 'auto'\n    element.scrollTo({ top: 0, behavior: 'auto' })\n    element.style['scroll-behavior'] = ''\n    scrollAncestorsToTop(element.parentElement)\n  }\n}\n\nexport const pathToRegex = (str, recursive) => {\n  const suffix = recursive ? '' : '/?$' //fallbacks should match recursively\n  str = str.replace(/\\/_fallback?$/, '(/|$)')\n  str = str.replace(/\\/index$/, '(/index)?') //index files should be matched even if not present in url\n  str = str.replace(MATCH_PARAM, '([^/]+)') + suffix\n  str = `^${str}`\n  return str\n}\n\nexport const pathToParamKeys = string => {\n  const paramsKeys = []\n  let matches\n  while ((matches = MATCH_PARAM.exec(string))) paramsKeys.push(matches[1])\n  return paramsKeys\n}\n\nexport const pathToRank = ({ path }) => {\n  return path\n    .split('/')\n    .filter(Boolean)\n    .map(str => (str === '_fallback' ? 'A' : str.startsWith(':') ? 'B' : 'C'))\n    .join('')\n}\n\n/** Supresses Routify caused logs and warnings for one tick */\nexport function suppressComponentWarnings(ctx, tick) {\n  suppressComponentWarnings._console = suppressComponentWarnings._console || { log: console.log, warn: console.warn }\n  const { _console } = suppressComponentWarnings\n\n  const name = ctx.componentFile.name\n    .replace(/Proxy<_?(.+)>/, '$1') //nollup wraps names in Proxy<...>\n    .replace(/^Index$/, ctx.component.shortPath.split('/').pop()) //nollup names Index.svelte index. We want a real name\n    .replace(/^./, s => s.toUpperCase()) //capitalize first letter\n    .replace(/\\:(.+)/, 'U5B$1u5D') // :id => U5Bidu5D\n\n  const ignores = [\n    `<${name}> received an unexpected slot \"default\".`,\n    `<${name}> was created with unknown prop 'scoped'`,\n    `<${name}> was created with unknown prop 'scopedSync'`,\n  ]\n  for (const log of ['log', 'warn']) {\n    console[log] = (...args) => {\n      if (!ignores.includes(args[0]))\n        _console[log](...args)\n    }\n    tick().then(() => {\n      //after component has been created, we want to restore the console method (log or warn)\n      console[log] = _console[log]\n    })\n  }\n}\n\nexport function currentLocation() {\n  let dirtyFullpath = window.location.pathname + window.location.search + window.location.hash\n  const { url, options } = resolvePrefetch(dirtyFullpath)\n  const parsedUrl = parseUrl(url)\n\n  return { ...parsedUrl, options }\n}\n\n/**\n * converts /path/to__routify_url_options__1234abcde to\n * {options, url: '/path/to'}\n * @param {string} dirtyFullpath \n */\nfunction resolvePrefetch(dirtyFullpath) {\n  const [url, _options] = dirtyFullpath.split('__[[routify_url_options]]__')\n\n  const options = JSON.parse(decodeURIComponent(_options || '') || '{}')\n\n  window.routify = window.routify || {}\n  window.routify.prefetched = options.prefetch\n\n  return { url, options }\n}\n\n/**\n * \n * @param {string} url \n */\nexport function parseUrl(url) {\n  if (config.useHash)\n    url = url.replace(/.*#(.+)/, '$1')\n  const origin = url.startsWith('/') ? window.location.origin : undefined\n  const _url = new URL(url, origin)\n  const fullpath = _url.pathname + _url.search + _url.hash\n  return { url: _url, fullpath }\n}\n\n\n/**\n * populates parameters, applies urlTransform, prefixes hash\n * eg. /foo/:bar to /foo/something or #/foo/something\n * and applies config.urlTransform\n * @param {*} path \n * @param {*} params \n */\nexport function resolveUrl(path, params, inheritedParams) {\n  const hash = config.useHash ? '#' : ''\n  let url\n  url = populateUrl(path, params, inheritedParams)\n  url = config.urlTransform.apply(url)\n  url = hash + url\n  return url\n}\n\n\n/**\n * populates an url path with parameters\n * populateUrl('/home/:foo', {foo: 'something', bar:'baz'})  to /foo/something?bar=baz\n * @param {*} path \n * @param {*} params \n */\nexport function populateUrl(path, params, inheritedParams) {\n  const allParams = Object.assign({}, inheritedParams, params)\n  const queryString = getQueryString(path, params)\n\n  for (const [key, value] of Object.entries(allParams))\n    path = path.replace(`:${key}`, value)\n\n  return `${path}${queryString}`\n}\n\n\n/**\n * \n * @param {string} path \n * @param {object} params \n */\nfunction getQueryString(path, params) {\n  if (!config.queryHandler) return \"\"\n  const ignoredKeys = pathToParamKeys(path)\n  const queryParams = {}\n  if (params) Object.entries(params).forEach(([key, value]) => {\n    if (!ignoredKeys.includes(key))\n      queryParams[key] = value\n  })\n  return config.queryHandler.stringify(queryParams).replace(/\\?$/, '')\n}","<script>\n  export let scoped = {};\n  scoped;\n</script>\n\n<slot/>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable, derived } from 'svelte/store'\nimport '../typedef'\n\nwindow.routify = window.routify || {}\n\n/** @type {import('svelte/store').Writable<RouteNode>} */\nexport const route = writable(null) // the actual route being rendered\n\n/** @type {import('svelte/store').Writable<RouteNode[]>} */\nexport const routes = writable([]) // all routes\nroutes.subscribe(routes => (window.routify.routes = routes))\n\nexport let rootContext = writable({ component: { params: {} } })\n\n/** @type {import('svelte/store').Writable<RouteNode>} */\nexport const urlRoute = writable(null)  // the route matching the url\n\nexport const prefetchPath = writable(\"\")\n\nexport const isChangingPage = writable(true)","import { get } from 'svelte/store'\nimport * as stores from '../store'\nimport config from '../../runtime.config'\nimport { parseUrl, resolveUrl } from './index'\n\n/**\n * @param {string} url \n * @return {ClientNode}\n */\nexport function urlToRoute(url, clone = false) {\n    url = config.urlTransform.remove(url)\n    let { pathname, search } = parseUrl(url).url\n\n    /** @type {RouteNode[]} */\n    const routes = get(stores.routes)\n    const matchingRoute =\n        // find a route with a matching name\n        routes.find(route => pathname === route.meta.name) ||\n        // or a matching path\n        routes.find(route => pathname.match(route.regex))\n\n    if (!matchingRoute)\n        throw new Error(`Route could not be found for \"${pathname}\".`)\n\n    // we want to clone if we're only previewing an URL\n    const _matchingRoute = clone ? Object.create(matchingRoute) : matchingRoute\n\n    const { route, redirectPath, rewritePath } = resolveRedirects(_matchingRoute, routes)\n\n    if (rewritePath) {\n        ({ pathname, search } = parseUrl(resolveUrl(rewritePath, route.params)).url)\n        if (redirectPath)\n            route.redirectTo = resolveUrl(redirectPath, route.params || {});\n    }\n\n    if (config.queryHandler)\n        route.params = Object.assign({}, config.queryHandler.parse(search))\n\n    assignParamsToRouteAndLayouts(route, pathname)\n\n    route.leftover = url.replace(new RegExp(route.regex), '')\n    return route\n}\n\nfunction assignParamsToRouteAndLayouts(route, pathname) {\n    if (route.paramKeys) {\n        const layouts = layoutByPos(route.layouts)\n        const fragments = pathname.split('/').filter(Boolean)\n        const routeProps = getRouteProps(route.path)\n\n        routeProps.forEach((prop, i) => {\n            if (prop) {\n                route.params[prop] = fragments[i]\n                if (layouts[i]) layouts[i].param = { [prop]: fragments[i] }\n                else route.param = { [prop]: fragments[i] }\n            }\n        })\n    }\n}\n\n/**\n * \n * @param {RouteNode} route \n * @param {RouteNode[]} routes \n * @param {*} params \n */\nfunction resolveRedirects(route, routes, redirectPath, rewritePath) {\n    const { redirect, rewrite } = route.meta\n\n    if (redirect || rewrite) {\n        redirectPath = redirect ? redirect.path || redirect : redirectPath\n        rewritePath = rewrite ? rewrite.path || rewrite : redirectPath\n        const redirectParams = redirect && redirect.params\n        const rewriteParams = rewrite && rewrite.params\n\n        const newRoute = routes.find(r => r.path === rewritePath)\n        if (newRoute === route) console.error(`${rewritePath} is redirecting to itself`)\n        if (!newRoute) console.error(`${route.path} is redirecting to non-existent path: ${rewritePath}`)\n        if (redirectParams || rewriteParams)\n            newRoute.params = Object.assign({}, newRoute.params, redirectParams, rewriteParams)\n\n        return resolveRedirects(newRoute, routes, redirectPath, rewritePath)\n    }\n    return { route, redirectPath, rewritePath }\n}\n\n\n/**\n * @param {array} layouts\n */\nfunction layoutByPos(layouts) {\n    const arr = []\n    layouts.forEach(layout => {\n        arr[layout.path.split('/').filter(Boolean).length - 1] = layout\n    })\n    return arr\n}\n\n\n/**\n * @param {string} url\n */\nfunction getRouteProps(url) {\n    return url\n        .split('/')\n        .filter(Boolean)\n        .map(f => f.match(/\\:(.+)/))\n        .map(f => f && f[1])\n}\n","<script context=\"module\">\n  import { writable, derived, get } from 'svelte/store'\n\n  /** config */\n  const iframeNum = 2\n  const defaults = {\n    validFor: 60,\n    timeout: 5000,\n    gracePeriod: 1000,\n  }\n\n  /** stores and subscriptions */\n  const queue = writable([])\n  const actives = derived(queue, q => q.slice(0, iframeNum))\n  actives.subscribe(actives =>\n    actives.forEach(({ options }) => {\n      setTimeout(() => removeFromQueue(options.prefetch), options.timeout)\n    })\n  )\n\n  /**\n   * @param {string} path\n   * @param {defaults} options\n   */\n  export function prefetch(path, options = {}) {\n    prefetch.id = prefetch.id || 1\n    path = path.href || path\n\n    options = { ...defaults, ...options }\n    options.prefetch = prefetch.id++\n\n    //don't prefetch within prefetch or SSR\n    if (window.routify.prefetched || navigator.userAgent.match('jsdom'))\n      return false\n\n    // add to queue\n    queue.update(q => {\n      if (!q.some(e => e.options.path === path))\n        q.push({\n          url: `${path}__[[routify_url_options]]__${encodeURIComponent(JSON.stringify(options))}`,\n          options,\n        })\n      return q\n    })\n  }\n\n  /**\n   * @param {number|MessageEvent} idOrEvent\n   */\n  function removeFromQueue(idOrEvent) {\n    const id = idOrEvent.data ? idOrEvent.data.prefetchId : idOrEvent\n    if (!id) return null\n\n    const entry = get(queue).find(\n      entry => entry && entry.options.prefetch == id\n    )\n    // removeFromQueue is called by both eventListener and timeout,\n    // but we can only remove the item once\n    if (entry) {\n      const { gracePeriod } = entry.options\n      const gracePromise = new Promise(resolve =>\n        setTimeout(resolve, gracePeriod)\n      )\n      const idlePromise = new Promise(resolve => {\n        window.requestIdleCallback\n          ? window.requestIdleCallback(resolve)\n          : setTimeout(resolve, gracePeriod + 1000)\n      })\n      Promise.all([gracePromise, idlePromise]).then(() => {\n        queue.update(q => q.filter(q => q.options.prefetch != id))\n      })\n    }\n  }\n\n  // Listen to message from child window\n  addEventListener('message', removeFromQueue, false)\n</script>\n\n<div id=\"__routify_iframes\" style=\"display: none\">\n  {#each $actives as prefetch (prefetch.options.prefetch)}\n    <iframe src={prefetch.url} frameborder=\"0\" title=\"routify prefetcher\" />\n  {/each}\n</div>\n","import { getContext, tick } from 'svelte'\nimport { derived, get, writable } from 'svelte/store'\nimport { route, routes, rootContext, isChangingPage } from './store'\nimport { resolveUrl } from './utils'\nimport { onPageLoaded } from './utils/onPageLoaded.js'\nimport { urlToRoute } from './utils/urlToRoute'\nimport { prefetch as _prefetch } from './Prefetcher.svelte'\n/// <reference path=\"../typedef.js\" />\n\n/** @ts-check */\n/**\n * @typedef {Object} RoutifyContext\n * @prop {ClientNode} component\n * @prop {ClientNode} layout\n * @prop {any} componentFile \n * \n *  @returns {import('svelte/store').Readable<RoutifyContext>} */\nfunction getRoutifyContext() {\n  return getContext('routify') || rootContext\n}\n\nexport const nodes = {\n  subscribe(run) {\n    const nodes = []\n    return derived(routes, routes => {\n      routes.forEach(route => {\n        const layouts = route.layouts\n          .map(layout => layout.api)\n          .filter(api => !nodes.includes(api))\n        nodes.push(route.api, ...layouts)\n      })\n\n      // enhance find method\n      const find = nodes.find\n      nodes.find = (value, ...args) => {\n        // if value is string, return route which name or path matches value\n        if (typeof value === 'string')\n          return nodes.find(n => n.meta.name === value) ||\n            nodes.find(n => n.path === value)\n        // or default to Array.find\n        else return find.bind(nodes)(value, ...args)\n      }\n\n      return nodes\n    }).subscribe(run)\n  }\n}\n\nexport const components = nodes\n\n/**\n * @typedef {import('svelte/store').Readable<ClientNodeApi>} ClientNodeHelperStore\n * @type { ClientNodeHelperStore } \n */\nexport const page = {\n  subscribe(run) {\n    return derived(route, route => route.api).subscribe(run)\n  }\n}\n\n/** @type {ClientNodeHelperStore} */\nexport const node = {\n  subscribe(run) {\n    const ctx = getRoutifyContext()\n    return derived(ctx, ctx => ctx.component.api).subscribe(run)\n  }\n}\n\n/** @type {ClientNodeHelperStore} */\nexport const layout = {\n  subscribe(run) {\n    const ctx = getRoutifyContext()\n    return derived(ctx, ctx => ctx.layout.api).subscribe(run)\n  }\n}\n\n/**\n* @typedef {{component: ClientNode}}  ContextHelper\n* @typedef {import('svelte/store').Readable<ContextHelper>} ContextHelperStore\n* @type {ContextHelperStore}\n*/\nexport const context = {\n  subscribe(run) {\n    return getRoutifyContext().subscribe(run)\n  }\n}\n\n/**\n * @typedef {function():void} ReadyHelper\n * @typedef {import('svelte/store').Readable<ReadyHelper>} ReadyHelperStore\n * @type {ReadyHelperStore}\n*/\nexport const ready = {\n  subscribe(run) {\n    window['routify'].stopAutoReady = true\n    async function ready() {\n      await tick()\n      await onPageLoaded({ page: get(route), metatags, afterPageLoad })\n    }\n    run(ready)\n    return () => { }\n  }\n}\n\n/**\n * @callback AfterPageLoadHelper\n * @param {function} callback\n * \n * @typedef {import('svelte/store').Readable<AfterPageLoadHelper> & {_hooks:Array<function>}} AfterPageLoadHelperStore\n * @type {AfterPageLoadHelperStore}\n */\nexport const afterPageLoad = {\n  _hooks: [\n    event => isChangingPage.set(false)\n  ],\n  subscribe: hookHandler\n}\n\n/** \n * @callback BeforeUrlChangeHelper\n * @param {function} callback\n *\n * @typedef {import('svelte/store').Readable<BeforeUrlChangeHelper> & {_hooks:Array<function>}} BeforeUrlChangeHelperStore\n * @type {BeforeUrlChangeHelperStore}\n **/\nexport const beforeUrlChange = {\n  _hooks: [],\n  subscribe: hookHandler\n}\n\nfunction hookHandler(listener) {\n  const hooks = this._hooks\n  const index = hooks.length\n  listener(callback => { hooks[index] = callback })\n  return (...params) => {\n    delete hooks[index]\n    listener(...params)\n  }\n}\n\n/**\n * We have to grab params and leftover from the context and not directly from the store.\n * Otherwise the context is updated before the component is destroyed. * \n * @typedef {Object.<string, *>} ParamsHelper\n * @typedef {import('svelte/store').Readable<ParamsHelper>} ParamsHelperStore\n * @type {ParamsHelperStore}\n **/\nexport const params = {\n  subscribe(run) {\n    const ctx = getRoutifyContext()\n    return derived(ctx, ctx => ctx.route.params).subscribe(run)\n  }\n}\n\n/**\n * @typedef {string} LeftoverHelper\n * @typedef {import('svelte/store').Readable<string>} LeftoverHelperStore\n * @type {LeftoverHelperStore} \n **/\nexport const leftover = {\n  subscribe(listener) {\n    return derived(\n      route,\n      route => route.leftover\n    ).subscribe(listener)\n  },\n}\n\n/** * \n * @param {ClientNodeApi} descendant \n * @param {ClientNodeApi} ancestor \n * @param {boolean} treatIndexAsAncestor \n */\nexport function isAncestor(ancestor, descendant, treatIndexAsAncestor = true) {\n  ancestor = ancestor.__file || ancestor\n  descendant = descendant.__file || descendant\n  const siblings = descendant.parent === ancestor.parent\n\n  if (!ancestor.isIndex) return false\n  if (descendant.shortPath === ancestor.shortPath) return false\n\n  if (siblings && !descendant.isDir) return !!treatIndexAsAncestor\n  return descendant.shortPath.startsWith(ancestor.shortPath)\n}\n\n\n/**\n * @typedef {import('svelte/store').Readable<Meta>} MetaHelperStore \n * @type {MetaHelperStore}\n * */\nexport const meta = {\n  subscribe(listener) {\n    const ctx = getRoutifyContext()\n    return derived(ctx, ctx => ctx.layout.meta).subscribe(listener)\n  },\n}\n\n/**\n * @callback UrlHelper\n * @param {String=} path\n * @param {UrlParams=} params\n * @param {UrlOptions=} options\n * @return {String}\n *\n * @typedef {import('svelte/store').Readable<UrlHelper>} UrlHelperStore\n * @type {UrlHelperStore} \n * */\nexport const url = {\n  subscribe(listener) {\n    const ctx = getRoutifyContext()\n    const { route, routes } = get(ctx)\n    return derived(\n      ctx,\n      ctx => makeUrlHelper(ctx, route, routes)\n    ).subscribe(\n      listener\n    )\n  }\n}\n\n/** \n * @param {{component: ClientNode}} $ctx \n * @param {RouteNode} $currentRoute \n * @param {RouteNode[]} $routes \n * @returns {UrlHelper}\n */\nexport function makeUrlHelper($ctx, $currentRoute, $routes) {\n  return function url(path, params = {}, options) {\n    const { component } = $ctx\n    const inheritedParams = Object.assign({}, $currentRoute.params, component.params)\n    let el = path && path.nodeType && path\n\n    if (el)\n      path = path.getAttribute('href')\n\n    path = path ? resolvePath(path) : component.shortPath\n\n    // preload the route  \n    const route = $routes.find(route => [route.shortPath || '/', route.path].includes(path))\n    if (route && route.meta.preload === 'proximity' && window.requestIdleCallback) {\n      const delay = routify.appLoaded ? 0 : 1500\n      setTimeout(() => {\n        window.requestIdleCallback(() => route.api.preload())\n      }, delay)\n    }\n\n    const strict = options && options.strict !== false\n    if (!strict) path = path.replace(/index$/, '')\n\n    let url = resolveUrl(path, params, inheritedParams)\n\n    if (el) {\n      el.href = url\n      return {\n        update(changedParams) { el.href = resolveUrl(path, changedParams, inheritedParams) }\n      }\n    }\n\n    return url\n\n    /**\n     * converts relative, named and absolute paths to absolute paths\n     * example: at `/foo/bar/baz`  the path  `../bar2/:something`  converts to   `/foo/bar2/:something`\n     * @param {*} path \n     */\n    function resolvePath(path) {\n      if (path.match(/^\\.\\.?\\//)) {\n        //RELATIVE PATH\n        let [, breadcrumbs, relativePath] = path.match(/^([\\.\\/]+)(.*)/)\n        let dir = component.path.replace(/\\/$/, '')\n        const traverse = breadcrumbs.match(/\\.\\.\\//g) || []\n        // if this is a page, we want to traverse one step back to its folder\n        if (component.isPage) traverse.push(null)\n        traverse.forEach(() => dir = dir.replace(/\\/[^\\/]+\\/?$/, ''))\n        path = `${dir}/${relativePath}`.replace(/\\/$/, '')\n        path = path || '/' // empty means root\n      } else if (path.match(/^\\//)) {\n        // ABSOLUTE PATH\n      } else {\n        // NAMED PATH\n        const matchingRoute = $routes.find(route => route.meta.name === path)\n        if (matchingRoute) path = matchingRoute.shortPath\n      }\n      return path\n    }\n\n\n\n  }\n}\n\n\n/**\n* @callback GotoHelper\n* @param {String=} path\n* @param {UrlParams=} params\n* @param {GotoOptions=} options\n*\n* @typedef {import('svelte/store').Readable<GotoHelper>}  GotoHelperStore\n* @type {GotoHelperStore} \n* */\nexport const goto = {\n  subscribe(listener) {\n    const routifyUpdatePage = getContext('routifyupdatepage')\n    return derived(url,\n      url => function goto(path, params, _static, shallow) {\n        const href = url(path, params)\n        if (!_static) history.pushState({}, null, href)\n        else routifyUpdatePage(href, shallow)\n      }\n    ).subscribe(\n      listener\n    )\n  },\n}\n\n/**\n * @type {GotoHelperStore} \n * */\nexport const redirect = {\n  subscribe(listener) {\n    const routifyUpdatePage = getContext('routifyupdatepage')\n    return derived(url,\n      url => function redirect(path, params, _static, shallow) {\n        const href = url(path, params)\n        if (!_static) history.replaceState({}, null, href)\n        else routifyUpdatePage(href, shallow)\n      }\n    ).subscribe(\n      listener\n    )\n  },\n}\n\n/**\n * @callback IsActiveHelper\n * @param {String=} path\n * @param {UrlParams=} params\n * @param {UrlOptions=} options\n * @returns {Boolean}\n * \n * @typedef {import('svelte/store').Readable<IsActiveHelper>} IsActiveHelperStore\n * @type {IsActiveHelperStore} \n * */\nexport const isActive = {\n  subscribe(run) {\n    return derived(\n      [url, route],\n      ([url, route]) => function isActive(path = \"\", params = {}, { strict } = { strict: true }) {\n        path = url(path, params, { strict })\n        const currentPath = url(route.path, null, { strict })\n        const re = new RegExp('^' + path + '($|/)')\n        return !!currentPath.match(re)\n      }\n    ).subscribe(run)\n  },\n}\n\n/**\n * @param {string|ClientNodeApi} path \n * @param {*} options \n */\nexport function precache(path, options) {\n  const node = typeof path === 'string' ? urlToRoute(path) : path\n  node.component()\n}\n\n/**\n * @param {string|ClientNodeApi} path \n * @param {*} options \n */\nexport function prefetch(path, options) {\n  _prefetch(path, options)\n}\n\n/**\n * @typedef {[ClientNodeApi, ClientNodeApi, ClientNodeApi]} ConcestorReturn\n * @typedef {function(ClientNodeApi, ClientNodeApi):ConcestorReturn} GetConcestor\n * @type {GetConcestor}\n */\nexport function getConcestor(nodeApi1, nodeApi2) {\n  const node1 = nodeApi1.__file\n  const node2 = nodeApi2.__file\n\n  // The route is the last piece of layout\n  const lineage1 = [...node1.lineage, node1]\n  const lineage2 = [...node2.lineage, node2]\n\n  let concestor = lineage1[0] //root\n  let children = [lineage1[0].api, lineage2[0].api]\n  // iterate through the layouts starting from the root\n  lineage1.forEach((n1, i) => {\n    const n2 = lineage2[i]\n    if (n2 && n1.parent === n2.parent) {\n      concestor = n1.parent\n      children = [n1.api, n2.api]\n    }\n  })\n  return [concestor.api, children[0], children[1]]\n}\n\n/**\n * Get index difference between two paths\n *\n * @export\n * @param {array} paths\n * @param {object} newPath\n * @param {object} oldPath\n * @returns {number}\n */\nexport function getDirection(paths, newPath, oldPath) {\n  const newIndex = paths.findIndex(path => newPath.path.startsWith(path))\n  const oldIndex = paths.findIndex(path => oldPath.path.startsWith(path))\n  return newIndex - oldIndex\n}\n\n/**\n * Sets element to active\n * @typedef {function(HTMLElement):void} FocusHelper\n * @type {FocusHelper}\n */\nexport function focus(element) {\n  if (!focusIsSet) {\n    focusIsSet = true\n    element.setAttribute('tabindex', \"0\")\n    element.focus()\n    setTimeout(() => (focusIsSet = false))\n  }\n}\nlet focusIsSet = false\n\n\n\nconst _metatags = {\n  subscribe(listener) {\n    this._origin = this.getOrigin()\n    return listener(metatags)\n  },\n  props: {},\n  templates: {},\n  services: {\n    plain: { propField: 'name', valueField: 'content' },\n    twitter: { propField: 'name', valueField: 'content' },\n    og: { propField: 'property', valueField: 'content' },\n  },\n  plugins: [\n    {\n      name: 'applyTemplate',\n      condition: () => true,\n      action: (prop, value) => {\n        const template = _metatags.getLongest(_metatags.templates, prop) || (x => x)\n        return [prop, template(value)]\n      }\n    },\n    {\n      name: 'createMeta',\n      condition: () => true,\n      action(prop, value) {\n        _metatags.writeMeta(prop, value)\n      }\n    },\n    {\n      name: 'createOG',\n      condition: prop => !prop.match(':'),\n      action(prop, value) {\n        _metatags.writeMeta(`og:${prop}`, value)\n      }\n    },\n    {\n      name: 'createTitle',\n      condition: prop => prop === 'title',\n      action(prop, value) {\n        document.title = value;\n      }\n    }\n  ],\n  getLongest(repo, name) {\n    const providers = repo[name]\n    if (providers) {\n      const currentPath = get(route).path\n      const allPaths = Object.keys(repo[name])\n      const matchingPaths = allPaths.filter(path => currentPath.includes(path))\n\n      const longestKey = matchingPaths.sort((a, b) => b.length - a.length)[0]\n\n      return providers[longestKey]\n    }\n  },\n  writeMeta(prop, value) {\n    const head = document.getElementsByTagName('head')[0]\n    const match = prop.match(/(.+)\\:/)\n    const serviceName = match && match[1] || 'plain'\n    const { propField, valueField } = metatags.services[serviceName] || metatags.services.plain\n    const oldElement = document.querySelector(`meta[${propField}='${prop}']`)\n    if (oldElement) oldElement.remove()\n\n    const newElement = document.createElement('meta')\n    newElement.setAttribute(propField, prop)\n    newElement.setAttribute(valueField, value)\n    newElement.setAttribute('data-origin', 'routify')\n    head.appendChild(newElement)\n  },\n  set(prop, value) {\n    // we only want strings. If metatags is used as a store, svelte will try to assign an object to prop\n    if (typeof prop === 'string') {\n      _metatags.plugins.forEach(plugin => {\n        if (plugin.condition(prop, value))\n          [prop, value] = plugin.action(prop, value) || [prop, value]\n      })\n    }\n  },\n  clear() {\n    const oldElement = document.querySelector(`meta`)\n    if (oldElement) oldElement.remove()\n  },\n  template(name, fn) {\n    const origin = _metatags.getOrigin\n    _metatags.templates[name] = _metatags.templates[name] || {}\n    _metatags.templates[name][origin] = fn\n  },\n  update() {\n    Object.keys(_metatags.props).forEach((prop) => {\n      let value = (_metatags.getLongest(_metatags.props, prop))\n      _metatags.plugins.forEach(plugin => {\n        if (plugin.condition(prop, value)) {\n          [prop, value] = plugin.action(prop, value) || [prop, value]\n\n        }\n      })\n    })\n  },\n  batchedUpdate() {\n    if (!_metatags._pendingUpdate) {\n      _metatags._pendingUpdate = true\n      setTimeout(() => {\n        _metatags._pendingUpdate = false\n        this.update()\n      })\n    }\n  },\n  _updateQueued: false,\n  _origin: false,\n  getOrigin() {\n    if (this._origin) return this._origin\n    const routifyCtx = getRoutifyContext()\n    return routifyCtx && get(routifyCtx).path || '/'\n  },\n  _pendingUpdate: false\n}\n\n\n/**\n * metatags\n * @prop {Object.<string, string>}\n */\nexport const metatags = new Proxy(_metatags, {\n  set(target, name, value, receiver) {\n    const { props } = target\n\n    if (Reflect.has(target, name))\n      Reflect.set(target, name, value, receiver)\n    else {\n      props[name] = props[name] || {}\n      props[name][target.getOrigin()] = value\n    }\n\n    if (window['routify'].appLoaded)\n      target.batchedUpdate()\n    return true\n  }\n})","<script>\n  // @ts-check\n  /** @typedef {{component():*, path: string, isLayout: false, param: false}} Decorator */\n  /** @typedef {ClientNode | Decorator} LayoutOrDecorator */\n  /**\n   * @typedef {Object} Context\n   * @prop {ClientNode} layout\n   * @prop {ClientNode} component\n   * @prop {LayoutOrDecorator} child\n   * @prop {SvelteComponent} ComponentFile\n   * @prop {HTMLElement} parentNode\n   * */\n\n  import { suppressComponentWarnings } from './utils'\n  import Noop from './decorators/Noop.svelte'\n  import '../typedef.js'\n  import { getContext, setContext, tick } from 'svelte'\n  import { writable } from 'svelte/store'\n  import { metatags, afterPageLoad } from './helpers.js'\n  import { route, routes, rootContext } from './store'\n  import { handleScroll } from './utils'\n  import { onPageLoaded } from './utils/onPageLoaded.js'\n\n  /** @type {LayoutOrDecorator[]} */\n  export let nodes = []\n  export let scoped = {}\n  export let decorator = undefined\n\n  /** @type {LayoutOrDecorator} */\n  let node = null\n  let remainingNodes = null\n  let scopedSync = {}\n  let parentNode\n  let invalidate = 1\n\n  const context = writable(null)\n  /** @type {import(\"svelte/store\").Writable<Context>} */\n  const parentContext = getContext('routify') || rootContext\n  const setParentNode = (el) => parentNode = el.parentNode\n  \n  setContext('routify', context)\n\n  let lastNodes = []\n  $: if (lastNodes !== nodes) {\n    lastNodes = nodes\n    ;[node, ...remainingNodes] = [...nodes]\n    node.api.reset = () => invalidate++\n  }\n\n  /**  @param {LayoutOrDecorator} node */\n  function setComponent(node) {\n    let PendingComponent = node.component()\n    if (PendingComponent instanceof Promise)\n      PendingComponent.then(onComponentLoaded)\n    else onComponentLoaded(PendingComponent)\n  }\n  $: setComponent(node)\n\n  /** @param {SvelteComponent} componentFile */\n  function onComponentLoaded(componentFile) {\n    scopedSync = { ...scoped }\n\n    // we have to proxy remaining nodes through ctx (instead of props) or route changes get propagated\n    // to leaf layouts of to-be-destroyed-layouts\n    const ctx = {\n      //we need to keep any possible context.child or the layout will be childless until the new child has been rendered\n      ...$context,\n      nodes: remainingNodes,\n      decorator: decorator || Noop,\n      layout: node.isLayout ? node : $parentContext.layout,\n      component: node,\n      route: $route,\n      routes: $routes,\n      componentFile,\n      parentNode: parentNode || $parentContext.parentNode,\n    }\n    context.set(ctx)\n    $parentContext.child = node\n    if (remainingNodes.length === 0) onLastComponentLoaded()\n  }\n\n  async function onLastComponentLoaded() {\n    await new Promise((resolve) => setTimeout(resolve))\n    const isOnCurrentRoute = $context.component.path === $route.path //maybe we're getting redirected\n\n    // Let everyone know the last child has rendered\n    if (!window['routify'].stopAutoReady && isOnCurrentRoute)\n      onPageLoaded({\n        page: $context.component,\n        metatags,\n        afterPageLoad,\n        parentNode,\n      })\n  }\n\n  /**  @param {ClientNode} layout */\n  function getID({ meta, path, param, params }) {\n    return JSON.stringify({\n      path,\n      invalidate,\n      param: (meta['param-is-page'] || meta['slug-is-page']) && param,\n      queryParams: meta['query-params-is-page'] && params,\n    })\n  }\n  $: id = $context && invalidate && getID($context.component)\n  $: $context && suppressComponentWarnings($context, tick)\n</script>\n\n{#if $context}\n  {#each [$context] as { component, componentFile, decorator, nodes } (id)}\n    <svelte:component this={decorator} {scoped}>\n      <svelte:component\n        this={componentFile}\n        let:scoped={scopeToChild}\n        let:decorator\n        {scoped}\n        {scopedSync}\n        {...node.param || {}}\n      >\n        {#if component && nodes.length}\n          <svelte:self\n            {decorator}\n            {nodes}\n            scoped={{ ...scoped, ...scopeToChild }}\n          />\n        {/if}\n      </svelte:component>\n    </svelte:component>\n  {/each}\n{/if}\n<!-- get the parent element for scroll and transitions -->\n\n{#if !parentNode}\n  <div style=\"display: contents\" use:setParentNode />\n{/if}","import { currentLocation, handleScroll } from './index'\n\n\nexport async function onPageLoaded({ page, metatags, afterPageLoad, parentNode }) {\n    //scroll needs to run after page load\n    const scrollToTop = page.last !== page\n    setTimeout(() => handleScroll(parentNode, scrollToTop))\n\n    const { path } = page\n    const { options } = currentLocation()\n    const prefetchId = options.prefetch\n\n    for (const hook of afterPageLoad._hooks) {\n        // deleted/invalidated hooks are left as undefined\n        if (hook) await hook(page.api)\n    }\n\n    metatags.update()\n\n    dispatchEvent(new CustomEvent('app-loaded'))\n    parent.postMessage({\n        msg: 'app-loaded',\n        prefetched: window.routify.prefetched,\n        path,\n        prefetchId\n    }, \"*\")\n    window['routify'].appLoaded = true\n    window['routify'].stopAutoReady = false\n}\n","import * as stores from './store'\nimport { get } from 'svelte/store'\nimport { beforeUrlChange } from './helpers'\nimport { urlToRoute } from './utils/urlToRoute'\nimport { currentLocation } from './utils'\n\nexport function init(routes, callback) {\n  /** @type { ClientNode | false } */\n  let lastRoute = false\n\n  function updatePage(proxyToUrl, shallow) {\n    const url = proxyToUrl || currentLocation().fullpath\n    const route = urlToRoute(url)\n    if (route.redirectTo) {\n      history.replaceStateNative({}, null, route.redirectTo)\n      delete route.redirectTo\n    }\n\n    const currentRoute = shallow && urlToRoute(currentLocation().fullpath, routes)\n    const contextRoute = currentRoute || route\n    const nodes = [...contextRoute.layouts, route]\n    if (lastRoute) delete lastRoute.last //todo is a page component the right place for the previous route?\n    route.last = lastRoute\n    lastRoute = route\n\n    //set the route in the store\n    if (!proxyToUrl)\n      stores.urlRoute.set(route)\n    stores.route.set(route)\n\n    //preload components in parallel\n    route.api.preload().then(() => {\n      //run callback in Router.svelte    \n      stores.isChangingPage.set(true)\n      callback(nodes)\n    })\n  }\n\n  const destroy = createEventListeners(updatePage)\n\n  return { updatePage, destroy }\n}\n\n/**\n * svelte:window events doesn't work on refresh\n * @param {Function} updatePage\n */\nfunction createEventListeners(updatePage) {\n  // history.*state\n  ;['pushState', 'replaceState'].forEach(eventName => {\n    if (!history[eventName + 'Native'])\n      history[eventName + 'Native'] = history[eventName]\n    history[eventName] = async function (state = {}, title, url) {\n      // do nothing if we're navigating to the current page\n      const currentUrl = location.pathname + location.search + location.hash\n      if (url === currentUrl) return false\n\n      const { id, path, params } = get(stores.route)\n      state = { id, path, params, ...state }\n      const event = new Event(eventName.toLowerCase())\n      Object.assign(event, { state, title, url })\n\n      const route = await runHooksBeforeUrlChange(event, url)\n      if (route) {\n        history[eventName + 'Native'].apply(this, [state, title, url])\n        return dispatchEvent(event)\n      }\n    }\n  })\n\n  let _ignoreNextPop = false\n\n  const listeners = {\n    click: handleClick,\n    pushstate: () => updatePage(),\n    replacestate: () => updatePage(),\n    popstate: async event => {\n      if (_ignoreNextPop)\n        _ignoreNextPop = false\n      else {\n        if (await runHooksBeforeUrlChange(event, currentLocation().fullpath)) {\n          updatePage()\n        } else {\n          _ignoreNextPop = true\n          event.preventDefault()\n          history.go(1)\n        }\n      }\n    },\n  }\n\n  Object.entries(listeners).forEach(args => addEventListener(...args))\n\n  const unregister = () => {\n    Object.entries(listeners).forEach(args => removeEventListener(...args))\n  }\n\n  return unregister\n}\n\nfunction handleClick(event) {\n  const el = event.target.closest('a')\n  const href = el && el.href\n\n  if (\n    event.ctrlKey ||\n    event.metaKey ||\n    event.altKey ||\n    event.shiftKey ||\n    event.button ||\n    event.defaultPrevented\n  )\n    return\n  if (!href || el.target || el.host !== location.host) return\n\n  const url = new URL(href)\n  const relativeUrl = url.pathname + url.search + url.hash\n\n  event.preventDefault()\n  history.pushState({}, '', relativeUrl)\n}\n\nasync function runHooksBeforeUrlChange(event, url) {\n  const route = urlToRoute(url).api\n  for (const hook of beforeUrlChange._hooks.filter(Boolean)) {\n    // return false if the hook returns false\n    const result = await hook(event, route, { url })\n    if (!result) return false\n  }\n  return true\n}\n\n","<script>\n  import { setContext, onDestroy } from 'svelte'\n  import Route from './Route.svelte'\n  import Prefetcher from './Prefetcher.svelte'\n  import { init } from './navigator.js'\n  import { route, routes as routesStore } from './store.js'\n  import defaultConfig from '../runtime.config'\n\n  export let routes\n  export let config = {}\n\n  let nodes\n  let navigator\n\n  window.routify = window.routify || {}\n  window.routify.inBrowser = !window.navigator.userAgent.match('jsdom')\n\n  Object.assign(defaultConfig, config)\n\n  const updatePage = (...args) => navigator && navigator.updatePage(...args)\n\n  setContext('routifyupdatepage', updatePage)\n\n  const callback = res => (nodes = res)\n\n  const cleanup = () => {\n    if (!navigator) return\n    navigator.destroy()\n    navigator = null\n  }\n\n  let initTimeout = null\n\n  // init is async to prevent a horrible bug that completely disable reactivity\n  // in the host component -- something like the component's update function is\n  // called before its fragment is created, and since the component is then seen\n  // as already dirty, it is never scheduled for update again, and remains dirty\n  // forever... I failed to isolate the precise conditions for the bug, but the\n  // faulty update is triggered by a change in the route store, and so offseting\n  // store initialization by one tick gives the host component some time to\n  // create its fragment. The root cause it probably a bug in Svelte with deeply\n  // intertwinned store and reactivity.\n  const doInit = () => {\n    clearTimeout(initTimeout)\n    initTimeout = setTimeout(() => {\n      cleanup()\n      navigator = init(routes, callback)\n      routesStore.set(routes)\n      navigator.updatePage()\n    })\n  }\n\n  $: if (routes) doInit()\n\n  onDestroy(cleanup)\n</script>\n\n{#if nodes && $route !== null}\n  <Route {nodes} />\n{/if}\n\n<Prefetcher />\n","/** \n * Node payload\n * @typedef {Object} NodePayload\n * @property {RouteNode=} file current node\n * @property {RouteNode=} parent parent of the current node\n * @property {StateObject=} state state shared by every node in the walker\n * @property {Object=} scope scope inherited by descendants in the scope\n *\n * State Object\n * @typedef {Object} StateObject\n * @prop {TreePayload=} treePayload payload from the tree\n * \n * Node walker proxy\n * @callback NodeWalkerProxy\n * @param {NodePayload} NodePayload\n */\n\n\n/**\n * Node middleware\n * @description Walks through the nodes of a tree\n * @example middleware = createNodeMiddleware(payload => {payload.file.name = 'hello'})(treePayload))\n * @param {NodeWalkerProxy} fn \n */\nfunction createNodeMiddleware(fn) {\n\n    /**    \n     * NodeMiddleware payload receiver\n     * @param {TreePayload} payload\n     */\n    const inner = async function execute(payload) {\n        return await nodeMiddleware(fn, {\n            file: payload.tree,\n            state: { treePayload: payload },\n            scope: {}\n        })\n    }\n\n    /**    \n     * NodeMiddleware sync payload receiver\n     * @param {TreePayload} payload\n     */\n    inner.sync = function executeSync(payload) {\n        return nodeMiddlewareSync(fn, {\n            file: payload.tree,\n            state: { treePayload: payload },\n            scope: {}\n        })\n    }\n\n    return inner\n}\n\n/**\n * Node walker\n * @param {NodeWalkerProxy} fn function to be called for each file\n * @param {NodePayload=} payload \n */\nasync function nodeMiddleware(fn, payload) {\n    const _file = await fn(payload)\n    if (_file === false) return false\n    const file = _file || payload.file\n\n    if (file.children) {\n        const children = await Promise.all(file.children.map(async _file => nodeMiddleware(fn, {\n            state: payload.state,\n            scope: clone(payload.scope || {}),\n            parent: payload.file,\n            file: await _file\n        })))\n        file.children = children.filter(Boolean)\n    }\n\n    return file\n}\n\n/**\n * Node walker (sync version)\n * @param {NodeWalkerProxy} fn function to be called for each file\n * @param {NodePayload=} payload \n */\nfunction nodeMiddlewareSync(fn, payload) {\n    const _file = fn(payload)\n    if (_file === false) return false\n\n    const file = _file || payload.file\n\n    if (file.children) {\n        const children = file.children.map(_file => nodeMiddlewareSync(fn, {\n            state: payload.state,\n            scope: clone(payload.scope || {}),\n            parent: payload.file,\n            file: _file\n        }))\n        file.children = children.filter(Boolean)\n    }\n\n    return file\n}\n\n\n/**\n * Clone with JSON\n * @param {T} obj \n * @returns {T} JSON cloned object\n * @template T\n */\nfunction clone(obj) { return JSON.parse(JSON.stringify(obj)) }\n\nexport {\n    nodeMiddleware,\n    nodeMiddlewareSync,\n    createNodeMiddleware\n}\n","import { createNodeMiddleware } from '../middleware'\nimport { pathToParamKeys, pathToRank, pathToRegex } from '../utils'\n\nexport const setRegex = createNodeMiddleware(({ file }) => {\n    if (file.isPage || file.isFallback)\n        file.regex = pathToRegex(file.path, file.isFallback)\n})\nexport const setParamKeys = createNodeMiddleware(({ file }) => {\n    file.paramKeys = pathToParamKeys(file.path)\n})\n\nexport const setShortPath = createNodeMiddleware(({ file }) => {\n    if (file.isFallback || file.isIndex)\n        file.shortPath = file.path.replace(/\\/[^/]+$/, '')\n    else file.shortPath = file.path\n})\nexport const setRank = createNodeMiddleware(({ file }) => {\n    file.ranking = pathToRank(file)\n})\n\n\n// todo delete?\nexport const addMetaChildren = createNodeMiddleware(({ file }) => {\n    const node = file\n    const metaChildren = file.meta && file.meta.children || []\n    if (metaChildren.length) {\n        node.children = node.children || []\n        node.children.push(...metaChildren.map(meta => ({ isMeta: true, ...meta, meta })))\n    }\n})\n\nexport const setIsIndexable = createNodeMiddleware(payload => {\n    const { file } = payload\n    const { isFallback, meta } = file\n    const isDynamic = file.path.split('/').pop().startsWith(':')\n    const isIndex = file.path.endsWith('/index')\n    const isIndexed = meta.index || meta.index === 0\n    const isHidden = meta.index === false\n\n    file.isIndexable = isIndexed || (!isFallback && !isDynamic && !isIndex && !isHidden)\n    file.isNonIndexable = !file.isIndexable\n})\n\nexport const assignRelations = createNodeMiddleware(({ file, parent }) => {\n    Object.defineProperty(file, 'parent', { get: () => parent })\n    Object.defineProperty(file, 'nextSibling', { get: () => _getSibling(file, 1) })\n    Object.defineProperty(file, 'prevSibling', { get: () => _getSibling(file, -1) })\n    Object.defineProperty(file, 'lineage', { get: () => _getLineage(parent) })\n})\n\nfunction _getLineage(node, lineage = []) {\n    if (node) {\n        lineage.unshift(node)\n        _getLineage(node.parent, lineage)\n    }\n    return lineage\n}\n\n/**\n * \n * @param {RouteNode} file \n * @param {Number} direction \n */\nfunction _getSibling(file, direction) {\n    if (!file.root) {\n        const siblings = file.parent.children.filter(c => c.isIndexable)\n        const index = siblings.indexOf(file)\n        return siblings[index + direction]\n    }\n}\n\nexport const assignIndex = createNodeMiddleware(({ file, parent }) => {\n    if (file.isIndex) Object.defineProperty(parent, 'index', { get: () => file })\n})\n\nexport const assignLayout = createNodeMiddleware(({ file, scope }) => {\n    // create a layouts getter\n    Object.defineProperty(file, 'layouts', { get: () => getLayouts(file) })\n\n    /**\n     * returns a list of layouts by recursively traversing the AST ancestry\n     * @param {RouteNode} file \n     * @returns {RouteNode[]}\n     */\n    function getLayouts(file) {\n        // if this isn't a layout and it's reset, return an empty array\n        if (!file.isLayout && file.meta.reset) return []\n\n        const { parent } = file\n        const layout = parent && parent.component && parent\n        const isReset = layout && (layout.isReset || layout.meta.reset)\n        const layouts = (parent && !isReset && getLayouts(parent)) || []\n        if (layout) layouts.push(layout)\n        return layouts\n    }\n})\n\n\nexport const createFlatList = treePayload => {\n    createNodeMiddleware(payload => {\n        if (payload.file.isPage || payload.file.isFallback)\n            payload.state.treePayload.routes.push(payload.file)\n    }).sync(treePayload)\n    treePayload.routes.sort((c, p) => (c.ranking >= p.ranking ? -1 : 1))\n}\n\nexport const setPrototype = createNodeMiddleware(({ file }) => {\n    const Prototype = file.root\n        ? Root\n        : file.children\n            ? file.isPage ? PageDir : Dir\n            : file.isReset\n                ? Reset\n                : file.isLayout\n                    ? Layout\n                    : file.isFallback\n                        ? Fallback\n                        : Page\n    Object.setPrototypeOf(file, Prototype.prototype)\n\n    function Layout() { }\n    function Dir() { }\n    function Fallback() { }\n    function Page() { }\n    function PageDir() { }\n    function Reset() { }\n    function Root() { }\n})\n","export const defaultNode = {\n    \"isDir\": false,\n    \"ext\": \"svelte\",\n    \"isLayout\": false,\n    \"isReset\": false,\n    \"isIndex\": false,\n    \"isFallback\": false,\n    \"isPage\": false,\n    \"ownMeta\": {},\n    \"meta\": {\n        \"recursive\": true,\n        \"preload\": false,\n        \"prerender\": true\n    },\n    \"id\": \"__fallback\",\n}\n\nconst devProps = [\n    'file', 'filepath', 'name', 'badExt', 'relativeDir', 'absolutePath',\n    'importPath', 'isFile'\n]\n\n/** @param {TreePayload} node  */\nexport function stripDefaultsAndDevProps(node) {\n    const strippedNode = {}\n\n    Object.entries(node)\n        .filter(([key]) => !devProps.includes(key))\n        .filter(([key, value]) => JSON.stringify(defaultNode[key]) !== JSON.stringify(value))\n        .forEach(([key, value]) => strippedNode[key] = value)\n\n    if (node.children)\n        strippedNode.children = [...node.children.map(stripDefaultsAndDevProps)]\n\n    return strippedNode\n}\n\nexport function restoreDefaults(node) {\n    Object.entries(defaultNode).forEach(([key, value]) => {\n        if (typeof node[key] === 'undefined')\n            node[key] = value\n    })\n    \n    if(node.children)\n        node.children = node.children.map(restoreDefaults)\n\n    return node\n}","import { createNodeMiddleware } from '../middleware'\nexport const assignAPI = createNodeMiddleware(({ file }) => {\n    file.api = new ClientApi(file)\n})\n\nclass ClientApi {\n    constructor(file) {\n        this.__file = file\n        Object.defineProperty(this, '__file', { enumerable: false })\n        this.isMeta = !!file.isMeta\n        this.path = file.path\n        this.title = _prettyName(file)\n        this.meta = file.meta\n    }\n\n    get parent() { return !this.__file.root && this.__file.parent.api }\n    get children() {\n        return (this.__file.children || this.__file.isLayout && this.__file.parent.children || [])\n            .filter(c => !c.isNonIndexable)\n            .sort((a, b) => {\n                if (a.isMeta && b.isMeta) return 0\n                a = (a.meta.index || a.meta.title || a.path).toString()\n                b = (b.meta.index || b.meta.title || b.path).toString()\n                return a.localeCompare((b), undefined, { numeric: true, sensitivity: 'base' })\n            })\n            .map(({ api }) => api)\n    }\n    get next() { return _navigate(this, +1) }\n    get prev() { return _navigate(this, -1) }\n    async preload() {\n        const filePromises = [\n            ...this.__file.layouts,\n            this.__file,\n            this.index && this.index.__file //if this is a layout, we want to include its index\n        ]\n            .filter(Boolean)\n            .map(file => file.component())\n        await Promise.all(filePromises)\n    }\n    get component() {\n        return this.__file.component ? //is file?\n            this.__file.component()\n            : this.__file.index ? //is dir with index?\n                this.__file.index.component()\n                : false\n    }\n    get componentWithIndex() {\n        return new Promise(resolve =>\n            Promise.all([\n                this.component,\n                this.index && this.index.component\n            ])\n                .then(res => resolve(res))\n        )\n    }\n    get index() {\n        const child = this.__file.children &&\n            this.__file.children.find(child => child.isIndex)\n        return child && child.api\n    }\n}\n\nfunction _navigate(node, direction) {\n    if (!node.__file.root) {\n        const siblings = node.parent.children\n        const index = siblings.indexOf(node)\n        return node.parent.children[index + direction]\n    }\n}\n\n\nfunction _prettyName(file) {\n    if (typeof file.meta.title !== 'undefined') return file.meta.title\n    else return (file.shortPath || file.path)\n        .split('/')\n        .pop()\n        .replace(/-/g, ' ')\n}\n\n","\n\nimport * as miscPlugins from './plugins/tree'\nimport { restoreDefaults } from './utils/normalizeNode'\nimport { assignAPI } from './plugins/assignAPI'\n\nconst plugins = {\n  ...miscPlugins,\n  restoreDefaults: ({ tree }) => restoreDefaults(tree),\n  assignAPI\n}\n\nexport function buildClientTree(tree) {\n  const order = [\n    // all\n    \"restoreDefaults\",\n    // pages\n    \"setParamKeys\", //pages only\n    \"setRegex\", //pages only\n    \"setShortPath\", //pages only\n    \"setRank\", //pages only\n    \"assignLayout\", //pages only,\n    // all\n    \"setPrototype\",\n    \"addMetaChildren\",\n    \"assignRelations\", //all (except meta components?)\n    \"setIsIndexable\", //all\n    \"assignIndex\", //all\n    \"assignAPI\", //all\n    // routes\n    \"createFlatList\"\n  ]\n\n  const payload = { tree, routes: [] }\n  for (let name of order) {\n    // if plugin is a createNodeMiddleware, use the sync function\n    const fn = plugins[name].sync || plugins[name]\n    fn(payload)\n  }\n  return payload\n}","\n/**\n * @roxi/routify 2.18.0\n * File generated Mon Jun 21 2021 00:36:27 GMT+0200 (Central European Summer Time)\n */\n\nexport const __version = \"2.18.0\"\nexport const __timestamp = \"2021-06-20T22:36:27.445Z\"\n\n//buildRoutes\nimport { buildClientTree } from \"@roxi/routify/runtime/buildRoutes\"\n\n//imports\n\n\n//options\nexport const options = {}\n\n//tree\nexport const _tree = {\n  \"root\": true,\n  \"children\": [\n    {\n      \"isFallback\": true,\n      \"path\": \"/_fallback\",\n      \"component\": () => import('../src/pages/_fallback.svelte').then(m => m.default)\n    },\n    {\n      \"isDir\": true,\n      \"ext\": \"\",\n      \"children\": [\n        {\n          \"ext\": \"svx\",\n          \"isPage\": true,\n          \"meta\": {\n            \"frontmatter\": {\n              \"title\": \"Button\",\n              \"description\": \"A component to create buttons\"\n            },\n            \"recursive\": true,\n            \"preload\": false,\n            \"prerender\": true\n          },\n          \"path\": \"/components/button\",\n          \"id\": \"_components_button\",\n          \"component\": () => import('../src/pages/components/button.svx').then(m => m.default)\n        }\n      ],\n      \"path\": \"/components\"\n    },\n    {\n      \"ext\": \"svx\",\n      \"isIndex\": true,\n      \"isPage\": true,\n      \"path\": \"/index\",\n      \"id\": \"_index\",\n      \"component\": () => import('../src/pages/index.svx').then(m => m.default)\n    }\n  ],\n  \"isLayout\": true,\n  \"path\": \"/\",\n  \"id\": \"__layout\",\n  \"component\": () => import('../src/pages/_layout.svelte').then(m => m.default)\n}\n\n\nexport const {tree, routes} = buildClientTree(_tree)\n\n","import HMR from \"@roxi/routify/hmr\";\nimport App from \"./App.svelte\";\n\nconst app = HMR(App, { target: document.body }, \"routify-app\");\n\nexport default app;\n","/**\n * mounts app to target element \n *\n * @export\n * @param {object} Component Svelte component\n * @param {object} [options={ target: document.body }] Options for the Svelte component\n * @param {string} [id='hmr'] ID for the component container\n * @param {string} [eventName='app-loaded'] Name of the event that triggers replacement of previous component\n * @returns\n */\nexport default function HMR(Component, options = { target: document.body }, id = 'hmr', eventName = 'app-loaded') {\n    const prerenderedHtmlElement = document.getElementById(id)\n\n    // Create a hidden target element to contain our app\n    const target = document.createElement(\"div\")\n    target.style.visibility = 'hidden'\n    options.target.appendChild(target)\n\n    if (!prerenderedHtmlElement)\n        showApp()\n    else\n        // Wait for the app to load before replacing the prerendered HTML\n        addEventListener(eventName, showApp)\n\n    function showApp() {\n        removeEventListener(eventName, showApp)\n        if (prerenderedHtmlElement) prerenderedHtmlElement.remove()\n        // Show our component and take over the ID of the old container\n        target.style.visibility = null\n        target.setAttribute('id', id)\n    }\n\n    return new Component({ ...options, target });\n}","<script>\n    import { url } from '@roxi/routify'\n</script>\n\n<style>\n  .huge {\n    font-size: 12rem;\n  }\n  .e404 {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n  }\n</style>\n\n<div class=\"e404\">\n  <div class=\"huge\">404</div>\n  <div class=\"big\">Page not found. \n  <!-- link to the parent folder of _fallback.svelte -->\n  <a href={$url('../')}>Go back</a>\n  </div>\n</div>\n","---\ntitle: Button\ndescription: A component to create buttons\n---\n\n<script lang=\"ts\">\n  //import { Button } from \"@iroco/ui\";\n</script>\n\n## text field\n\n","<script>\n  import { layout, url, isActive } from \"@roxi/routify\";\n  const components = $layout.children[0].children\n          .filter((c) => c.meta[\"frontmatter\"])\n          .sort((a, b) => b.meta[\"frontmatter\"].published.localeCompare(a.meta[\"frontmatter\"].published));\n  console.log(components)\n</script>\n\n<nav>\n  <ul>\n    <li><a href=\"/\">Home</a></li>\n    <li>Components</li>\n    <ul>\n      {#each components as {path, title}}\n      <li><a href={$url(path)} class:active={$isActive(path)}>{title}</a></li>\n    {/each}\n    </ul>\n  </ul>\n</nav>\n\n<style lang=\"scss\">\n  nav {\n    ul {\n      list-style: none;\n    }\n  }\n</style>\n","<script>\n  import { metatags, page } from \"@roxi/routify\";\n  import Navigation from \"./_navigation.svelte\";\n\n  $: metatags.title = `My Routify app - ${$page.title}`;\n  metatags.description = \"Description coming soon...\";\n</script>\n\n<div class=\"container\">\n  <Navigation />\n  <div class=\"page\">\n    <slot />\n  </div>\n</div>\n\n<style lang=\"scss\">\n  .container {\n    display: flex;\n    >.page {\n      margin-left: 2em;\n    }\n  }\n</style>"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","attr","attribute","removeAttribute","getAttribute","setAttribute","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","setContext","context","set","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","flushing","seen_callbacks","Set","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","destroy_block","lookup","outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","customElement","on_mount","new_on_destroy","map","filter","destroy_component","detaching","init","options","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","queryHandler","parse","search","fromEntries","iterable","URLSearchParams","reduce","val","stringify","params","toString","urlTransform","apply","x","remove","useHash","MATCH_PARAM","RegExp","handleScroll","scrollToTop","navigator","userAgent","includes","scrollAncestorsToTop","scrollTo","dataset","routify","top","behavior","parentElement","hash","window","location","test","substring","el","querySelector","scrollIntoView","handleHash","pathToParamKeys","string","paramsKeys","matches","exec","suppressComponentWarnings","_console","log","console","warn","componentFile","replace","shortPath","split","s","toUpperCase","ignores","args","currentLocation","dirtyFullpath","pathname","url","_options","JSON","decodeURIComponent","prefetched","prefetch","resolvePrefetch","parseUrl","config","origin","startsWith","_url","URL","fullpath","resolveUrl","path","inheritedParams","allParams","queryString","ignoredKeys","queryParams","entries","getQueryString","populateUrl","scoped","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","route","routes","rootContext","urlRoute","isChangingPage","urlToRoute","clone","stores.routes","matchingRoute","find","meta","match","regex","_matchingRoute","redirectPath","rewritePath","resolveRedirects","redirect","rewrite","redirectParams","rewriteParams","newRoute","error","redirectTo","paramKeys","layouts","arr","layout","Boolean","layoutByPos","fragments","f","getRouteProps","prop","param","assignParamsToRouteAndLayouts","leftover","queue","actives","q","removeFromQueue","idOrEvent","id","prefetchId","entry","gracePeriod","gracePromise","setTimeout","idlePromise","requestIdleCallback","all","timeout","addEventListener","getRoutifyContext","page","api","afterPageLoad","_hooks","event","hookHandler","beforeUrlChange","listener","hooks","makeUrlHelper","$ctx","$currentRoute","$routes","nodeType","breadcrumbs","relativePath","dir","traverse","isPage","resolvePath","preload","delay","appLoaded","strict","href","changedParams","isActive","currentPath","re","_metatags","_origin","getOrigin","metatags","templates","services","plain","propField","valueField","twitter","og","plugins","condition","action","getLongest","writeMeta","title","repo","providers","sort","head","getElementsByTagName","serviceName","oldElement","newElement","plugin","_pendingUpdate","_updateQueued","routifyCtx","Proxy","receiver","Reflect","batchedUpdate","scopeToChild","levels","updates","to_null_out","accounted_for","spread_props","action_result","decorator","remainingNodes","scopedSync","parentContext","lastNodes","onComponentLoaded","$context","Noop","isLayout","$parentContext","$route","child","isOnCurrentRoute","stopAutoReady","async","last","hook","dispatchEvent","CustomEvent","parent","postMessage","msg","onPageLoaded","onLastComponentLoaded","reset","PendingComponent","setComponent","getID","lastRoute","updatePage","proxyToUrl","shallow","history","replaceStateNative","stores.urlRoute","stores.route","stores.isChangingPage","eventName","state","Event","toLowerCase","runHooksBeforeUrlChange","_ignoreNextPop","listeners","click","handleClick","pushstate","replacestate","popstate","preventDefault","go","removeEventListener","createEventListeners","closest","ctrlKey","metaKey","altKey","shiftKey","button","defaultPrevented","host","relativeUrl","pushState","inBrowser","defaultConfig","res","initTimeout","clearTimeout","routesStore","createNodeMiddleware","inner","payload","nodeMiddleware","_file","file","scope","tree","treePayload","nodeMiddlewareSync","setRegex","isFallback","str","recursive","suffix","pathToRegex","setParamKeys","setShortPath","isIndex","setRank","ranking","join","pathToRank","addMetaChildren","metaChildren","isMeta","setIsIndexable","isDynamic","endsWith","isIndexed","isHidden","isIndexable","isNonIndexable","assignRelations","defineProperty","_getSibling","_getLineage","lineage","unshift","direction","root","siblings","assignIndex","assignLayout","getLayouts","isReset","setPrototype","Prototype","setPrototypeOf","prototype","defaultNode","isDir","ext","ownMeta","prerender","restoreDefaults","assignAPI","ClientApi","__file","enumerable","_prettyName","localeCompare","numeric","sensitivity","_navigate","prev","filePromises","componentWithIndex","miscPlugins","_tree","default","frontmatter","description","order","buildClientTree","app","Component","body","prerenderedHtmlElement","getElementById","showApp","visibility","HMR","iterations","components","$layout","published","$page"],"mappings":"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"}